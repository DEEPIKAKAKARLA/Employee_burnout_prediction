/* Program To Find The Stage of Sleep, Accuracy and Test loss */ 
import numpy as np
import pandas as pd
import tensorflow as tf
from sklearn.preprocessing import LabelEncoder, StandardScaler
from tensorflow.keras.layers import Input, Conv1D, LSTM, Dense, Dropout
from tensorflow.keras.models import Model
# Load data
data = pd.read_csv('/content/sleepstage.csv')
X = data.drop(columns=['Stage','Time']).values
y = data['Stage'].values
# Preprocessing
scaler = StandardScaler()
#print(X)
X = scaler.fit_transform(X)
encoder = LabelEncoder()
y = encoder.fit_transform(y)
from sklearn.model_selection import train_test_split
# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y,stratify=y, test_size=0.2)
# Model architecture
inputs = Input(shape=(X.shape[1], 1))
x = Conv1D(64, 3, activation='relu')(inputs)
x = LSTM(64, return_sequences=True)(x)
x = LSTM(64)(x)
x = Dense(64, activation='relu')(x)
outputs = Dense(5, activation='softmax')(x)
model = Model(inputs=inputs, outputs=outputs)
# Model compilation
model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', 
metrics=['accuracy'])
# Model training
model.fit(X_train, y_train, epochs=20, batch_size=12, validation_data=(X_test, y_test))
# Model evaluation
loss, accuracy = model.evaluate(X_test, y_test, verbose=0)
print(f'Test loss: {loss:.4f}, Test accuracy: {accuracy:.4f}')
